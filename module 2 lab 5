#include "pch.h"

#include <iostream>



using namespace std;



void pyramid_sort(int *, int);

void shift_down(int *, int, int, int*);



void batcher_sort(int *, int, int);



int main()

{

	cout << "Enter size of array: ";

	int size;

	cin >> size;

	int *arr = new int[size];

	for (int i = 0; i < size; i++)

	{

		cout << "Enter " << i << " element: ";

		cin >> arr[i];

	}



	pyramid_sort(arr, size);



	for (int i = 0; i < size; i++)

	{

		cout << arr[i] << ' ';

	}

	cout << endl;

}



void shift_down(int *numbers, int root, int bottom, int *per_comp)

{

	int max_child;

	bool done = false;

	

	while (root * 2 <= bottom && !done)

	{

		if (root * 2 == bottom)

			max_child = root * 2;

		else if (numbers[root * 2] > numbers[root * 2 + 1])

			max_child = root * 2;

		else

			max_child = root * 2 + 1;



		per_comp[1]++;

		if (numbers[root] < numbers[max_child])

		{

			int temp = numbers[root];

			numbers[root] = numbers[max_child];

			numbers[max_child] = temp;

			root = max_child;

			per_comp[0]++;

		}

		else

			done = true;

	}

}

void pyramid_sort(int *numbers, int array_size)

{

	int *per_comp = new int(2);

	per_comp[0] = 0;

	per_comp[1] = 0;

	for (int i = array_size / 2 - 1; i >= 0; i--)

		shift_down(numbers, i, array_size - 1, per_comp);

	

	int prev_level = 0, this_level = 1;

	for (int i = 0; i < array_size; i++)

	{

		cout << numbers[i] << ' ';

		if (prev_level + this_level - 1 == i)

		{

			cout << endl;

			prev_level = this_level;

			this_level = prev_level * 2;

		}

	}

	cout << endl;

	

	for (int i = array_size - 1; i >= 1; i--)

	{

		int temp = numbers[0];

		numbers[0] = numbers[i];

		numbers[i] = temp;

		shift_down(numbers, 0, i - 1, per_comp);

		prev_level = 0;

		this_level = 1;

		for (int j = 0; j < array_size; j++)

		{

			cout << numbers[j] << ' ';

			if (prev_level + this_level - 1 == j)

			{

				cout << endl;

				prev_level = this_level;

				this_level = prev_level * 2;

			}

		}

		cout << endl;

	}

	cout << endl << per_comp[0] << ' ' << per_comp[1] << endl << endl;

}



void batcher_sort(int *arr, int l, int r)

{

	int per = 0, comp = 0;

	int N = r - l + 1;

	for (int p = 1; p < N; p += p)

		for (int k = p; k > 0; k /= 2)

			for (int j = k % p; j + k < N; j += k + k)

				for (int i = 0; i < N - j - k; i++)

					if ((j + i) / (p + p) == (j + i + k) / (p + p))

					{

						if (arr[l + j + i] > arr[l + j + i + k])

						{

							int temp = arr[l + j + i];

							arr[l + j + i] = arr[l + j + i + k];

							arr[l + j + i + k] = temp;

							per++;

						}

						comp++;

					}

	cout << per << ' ' << comp << endl;

}
